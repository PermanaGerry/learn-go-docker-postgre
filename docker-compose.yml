version: '3.9'
services:
  app:
    container_name: golang_container
    environment:
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    tty: true
    build: .
    ports:
      - 8000:8000
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      postgresdb :
        condition: service_healthy
    links:
      - postgresdb
    networks:
      - learning

  postgresdb:
    image: postgres:latest
    container_name: postgres_container
    environment:
      - DATABASE_HOST=${DB_HOST}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      # create data postgres
      - ./data/postgres:/var/lib/postgresql/data
      # create username
      - ./migration/create_password.sql:/docker-entrypoint-initdb.d/create_password.sql
      # create table items
      # - ./migration/create_items.sql:/docker-entrypoint-initdb.d/create_items.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - learning

volumes:
  pg_data:

# Networks to be created to facilitate communication between containers
networks:
  learning:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
